  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  
  - name: enable node js 20
    ansible.builtin.command: dnf module enable nodejs:20 -y


  - name: install node js,mysql
    ansible.builtin.package:
     name: "{{item}}"
     state: present
    loop: 
     - nodejs
     - mysql  

  - name: create expense user
    ansible.builtin.user:
     name: expense
  - name: import tasks from common role
    tags:
    - deployment
    ansible.builtin.import_role:
      name: common
      tasks_from: app-pre-req   

  # - name: create app directory
  #   ansible.builtin.file:
  #    path: /app
  #    state: directory

  # - name: download the backend code
  #   ansible.builtin.get_url:
  #    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
  #    dest: /tmp/backend.zip      


  # - name: exctract the code
  #   ansible.builtin.unarchive:
  #    src: /tmp/backend.zip
  #    dest: /app 
  #    remote_src: yes


  - name: insatll dependencies
    tags:
    - deployment
    ansible.builtin.command: npm install
    args:
     chdir: /app


  - name: copy backend service file
    ansible.builtin.template:
     src: backend.service.j2
     dest: /etc/systemd/system/backend.service

  - name: ansible to install pymysql
    ansible.builtin.pip:
     name:
     - PyMySQL
     - cryptography
     executable: pip3.9

  - name: import mysql data
    community.mysql.mysql_db:
     login_user: root
     login_password: "{{ mysql_root_password }}"
     login_host: "{{ login_host }}" 
     target: /app/schema/backend.sql
     name: all
     state: import


  - name: deamon reload
    ansible.builtin.systemd_service:
     state: restarted   
     name: backend
       

  